<?php

/** @see \GotChange_Form_Input */
require_once APPLICATION_PATH . '/forms/Input.php';

/**
 * Test class for GotChange_Form_Input.
 * Generated by PHPUnit on 2011-09-25 at 16:25:43.
 */
class GotChange_Form_InputTest extends PHPUnit_Framework_TestCase
{

    /**
     * @var GotChange_Form_Input
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new GotChange_Form_Input();
    }

    /**
     * check that we have the correct elements as part of the form object
     */
    public function testCheckElementsExist()
    {
        // get our elements
        $change = $this->object->getElement('change');
        $submit = $this->object->getElement('submitbutton');
        
        // validate our element types
        $this->assertInstanceOf('Zend_Form_Element_Text', $change);
        $this->assertInstanceOf('Zend_Form_Element_Button', $submit);
    }
    
    /**
     * ensure that isRequired is set on the change element
     */
    public function testCheckChangeIsRequired()
    {
        // get our element
        $change = $this->object->getElement('change');
        
        // assert
        $this->assertTrue($change->isRequired());
    }

    /**
     * check that the change element has the UKCurrency validator
     */
    public function testCheckChangeHasUKCurrencyValidator()
    {
        // fetch validator
        $change = $this->object->getElement('change');
        $validator = $change->getValidator('GotChange_Validate_UKCurrency');
        
        // assert
        $this->assertInstanceOf('GotChange_Validate_UKCurrency', $validator);
    }
    
    /**
     * test that we are filtering our value and converting it to pence
     */
    public function testGetPence()
    {
        // assign
        $expected = 153;
        $this->object->populate(array('change' => 'Â£1.53'));
        
        // act
        $actual = $this->object->getPence();
        
        // assert
        $this->assertEquals($expected, $actual);
    }
}